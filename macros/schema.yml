# To do : check the Pk on snapshotted data to ensure that the column snapshot date is indeed considered, and not just a string

version: 2

macros:
  - name: column_dbt_load_date
    description: 
      This macro returns a SQL column which casts the Dbt start run date (i.e. load date) as a date.
  - name: column_dbt_load_datetime
    description: 
      This macro returns a SQL column which casts the Dbt start run date (i.e. load date) as a datetime.
  - name: column_dbt_previous_month
    description: 
      This macro returns a SQL column which represents the last day of the previous month, based on the Dbt start run date.
      This is useful when Dbt automatically takes a monthly snapshot of the data, at the end of each month.
  - name: sqlserver__concat
    description: 
      This macro is an edited version of the built-in standard Dbt macro, to ensure syntax compability with TSQL and SQL Server Express.
  - name: sqlserver__create_columns
    description: 
      This macro is an edited version of the built-in standard Dbt macro, to ensure syntax compability with TSQL and SQL Server Express.
  - name: generate_schema_name
    description: 
      This macro is an edited version of the built-in standard Dbt macro, to remove the user-specific schema generation.
  - name: sqlserver__unpivot
    description: 
      This macro is an edited version of the built-in standard Dbt macro, to ensure syntax compability with TSQL and SQL Server Express.
  - name: hook_transaction_add_not_null
    description: 
      This macro adds a NON NULL constraint on the transaction_line_nsid and transaction_nsid.
      This is a mandatory step to create a primary key constraint inside the database.
  - name: hook_transaction_drop_pk_constraint
    description: 
      This macro DROPs the primary key constraint on the transaction_line_nsid and transaction_nsid if it had been previously created inside the database.
      This is a mandatory step to create a primary key constraint inside the database. Indeed TSQL does not support "ADD CONSTRAINT IF NOT EXISTS". 
  - name: hook_transaction_add_pk
    description: 
      This macro ADDs the primary key constraint on the transaction_line_nsid and transaction_nsid.
  - name: model_generate_dim_scd
    description: 
      This macro creates a SQL statement that performs a self-join on a historized dimension table. Therefore, the macro creates a dimension table which contains both the historical attributes and the current attributes for the specified primary key.
    arguments:
      - name: table_name
        description: 
          Name of the historized dimension table that should be queried.
      - name: column_key
        description: 
          Primary key of the dimension table - on which the self-join should be performed.
  - name: model_generate_dataset_rls
    description: 
      This macro creates a SQL statement that automatically implement the row-level-security on a dataset. 
      Technically, the table generated by the macro duplicates records of the initial dataset, for each user, based on the security defined.
      The BI tool is then expected to filter the records based on the user email logged-in.
    arguments:
      - name: data_model
        description: 
          Name of the dataset for which row-level-security should be implemented.
      - name: scenario
        description: 
          Join condition that is expected to be used in order to assign users to the dimensions of the dataset.
          Indeed, some security dimensions may not be relevant if they are absent from the dataset.